spring:
  datasource: 
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${mysql.host}:${mysql.port}/mall_oms?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true
    username: ${mysql.username}
    password: ${mysql.password}
  # RabbitMQ 配置
  rabbitmq:
    host: ${rabbitmq.host}
    port: ${rabbitmq.port}
    username: ${rabbitmq.username}
    password: ${rabbitmq.password}
    # 动态创建和绑定队列、交换机的配置
    modules: 
      # 订单延时队列，到了过期的时间会被转发到订单取消队列
      - routing-key: order.create.routing.key
        queue:
          name: order.delay.queue
          dead-letter-exchange: order.exchange
          dead-letter-routing-key: order.close.routing.key
          arguments:
            # 1分钟(测试)，单位毫秒
            x-message-ttl: 60000 
        exchange:
          name: order.exchange

      # 订单取消队列
      - routing-key: order.close.routing.key
        queue:
          name: order.close.queue
        exchange:
          name: order.exchange
  clould:
    sentinel:
    enabled: true
    eager: true # 取消控制台懒加载，项目启动即连接Sentinel
    transport: # 提供客户端与服务端基础和监控API模块
      dashboard: ${sentinel.dashboard} # 控制台地址
      port: 8719 # 端口配置会在应用对应的机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。
    datasource:
      # 限流规则，flow为key，随便定义
      flow:
        nacos:
          server-addr: ${spring.cloud.nacos.discovery.server-addr}
          dataId: ${spring.application.name}-flow-rules
          groupId: SENTINEL_GROUP
          rule-type: flow        
  redis:
    database: 0
    host: ${redis.host}
    port: ${redis.port}
    password: ${redis.password}
    lettuce:
      pool:
        min-idle: 1
mybatis-plus:
  configuration:
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler
rocketmq:
  name-server: http://c.youlai.tech:9876
  producer:
    group: defaultGroup

# 分布式锁配置
redisson:
  address: redis://${redis.host}:${redis.port}
  password: ${redis.password}
  database: 0
  min-idle: 2

# Seata配置
seata:
  enabled: true
  # 事务分组配置
  tx-service-group: mall_tx_group
  # 指定事务分组至集群映射关系，集群名default需要与seata server注册到Nacos的cluster保持一致
  service:
    vgroup-mapping:
      mall_tx_group: default 
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: ${seata.nacos.server-addr}
      namespace:
      group: SEATA_GROUP
      
# Feign 配置
feign:
  httpclient:
    enabled: true
  okhttp:
    enabled: false
  sentinel:  # 开启feign对sentinel的支持
    enabled: false 